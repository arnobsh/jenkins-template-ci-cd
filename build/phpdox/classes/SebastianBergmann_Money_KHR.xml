<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="SebastianBergmann\Money\KHR" namespace="SebastianBergmann\Money" name="KHR" abstract="false" final="false" start="21" end="27">
  <file path="../src/currency" file="KHR.php" realpath="/home/dri/workspace/jenkins/test-project/src/currency/KHR.php" size="721" time="2016-09-21T19:26:29+00:00" unixtime="1474485989" sha1="5fb08b8fd4ac627fb3c081f52c5e44324cd6b1d9" relative="currency/KHR.php"/>
  <docblock>
    <description/>
    <package value="Money"/>
    <author value="Sebastian Bergmann &lt;sebastian@phpunit.de&gt;"/>
    <copyright value="Sebastian Bergmann &lt;sebastian@phpunit.de&gt;"/>
    <license name="http://www.opensource.org/licenses/BSD-3-Clause  The BSD 3-Clause License"/>
    <since value="Class available since Release 1.3.0"/>
    <codecoverageignore/>
  </docblock>
  <extends full="SebastianBergmann\Money\Money" namespace="SebastianBergmann\Money" name="Money"/>
  <constructor name="__construct" start="23" end="26" abstract="false" final="false" static="false" visibility="public">
    <parameter name="amount" byreference="false" type="{unknown}"/>
  </constructor>
  <parent full="SebastianBergmann\Money\Money" namespace="SebastianBergmann\Money" name="Money">
    <implements full="JsonSerializable" namespace="" name="JsonSerializable"/>
    <constructor name="__construct" start="52" end="60" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <param type="integer" variable="$amount"/>
        <param type="object" variable="$currency">
          <type full="\SebastianBergmann\Money\Currency|string" namespace="\SebastianBergmann\Money" name="Currency|string"/>
        </param>
        <throws type="object">
          <type full="\SebastianBergmann\Money\InvalidArgumentException" namespace="\SebastianBergmann\Money" name="InvalidArgumentException"/>
        </throws>
      </docblock>
      <parameter name="amount" byreference="false" type="{unknown}"/>
      <parameter name="currency" byreference="false" type="{unknown}"/>
    </constructor>
    <method name="fromString" start="77" end="100" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Creates a Money object from a string such as &quot;12.34&quot;">This method is designed to take into account the errors that can arise
from manipulating floating point numbers.

If the number of decimals in the string is higher than the currency's
number of fractional digits then the value will be rounded to the
currency's number of fractional digits.</description>
        <param type="string" variable="$value"/>
        <param type="object" variable="$currency">
          <type full="\SebastianBergmann\Money\Currency|string" namespace="\SebastianBergmann\Money" name="Currency|string"/>
        </param>
        <return resolution="static" type="object">
          <type full="SebastianBergmann\Money\KHR" namespace="SebastianBergmann\Money" name="KHR"/>
        </return>
        <throws type="object">
          <type full="\SebastianBergmann\Money\InvalidArgumentException" namespace="\SebastianBergmann\Money" name="InvalidArgumentException"/>
        </throws>
      </docblock>
      <parameter name="value" byreference="false" type="{unknown}"/>
      <parameter name="currency" byreference="false" type="{unknown}"/>
    </method>
    <method name="jsonSerialize" start="108" end="114" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Specify data which should be serialized to JSON"/>
        <return description="data which can be serialized by &lt;b&gt;json_encode&lt;/b&gt;," type="mixed"/>
        <link value="http://php.net/manual/en/jsonserializable.jsonserialize.php"/>
      </docblock>
    </method>
    <method name="getAmount" start="121" end="124" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the monetary value represented by this object."/>
        <return type="integer"/>
      </docblock>
    </method>
    <method name="getConvertedAmount" start="131" end="134" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="return the monetary value represented by this object converted to its base units"/>
        <return type="float"/>
      </docblock>
    </method>
    <method name="getCurrency" start="142" end="145" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the currency of the monetary value represented by this object."/>
        <return type="object">
          <type full="\SebastianBergmann\Money\Currency" namespace="\SebastianBergmann\Money" name="Currency"/>
        </return>
      </docblock>
    </method>
    <method name="add" start="156" end="165" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns a new Money object that represents the monetary value of the sum of this Money object and another."/>
        <param type="object" variable="$other">
          <type full="\SebastianBergmann\Money\Money" namespace="\SebastianBergmann\Money" name="Money"/>
        </param>
        <return resolution="static" type="object">
          <type full="SebastianBergmann\Money\KHR" namespace="SebastianBergmann\Money" name="KHR"/>
        </return>
        <throws type="object">
          <type full="\SebastianBergmann\Money\CurrencyMismatchException" namespace="\SebastianBergmann\Money" name="CurrencyMismatchException"/>
        </throws>
        <throws type="object">
          <type full="\SebastianBergmann\Money\OverflowException" namespace="\SebastianBergmann\Money" name="OverflowException"/>
        </throws>
      </docblock>
      <parameter name="other" byreference="false" type="object">
        <type full="SebastianBergmann\Money\Money" namespace="SebastianBergmann\Money" name="Money"/>
      </parameter>
    </method>
    <method name="subtract" start="176" end="185" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns a new Money object that represents the monetary value of the difference of this Money object and another."/>
        <param type="object" variable="$other">
          <type full="\SebastianBergmann\Money\Money" namespace="\SebastianBergmann\Money" name="Money"/>
        </param>
        <return resolution="static" type="object">
          <type full="SebastianBergmann\Money\KHR" namespace="SebastianBergmann\Money" name="KHR"/>
        </return>
        <throws type="object">
          <type full="\SebastianBergmann\Money\CurrencyMismatchException" namespace="\SebastianBergmann\Money" name="CurrencyMismatchException"/>
        </throws>
        <throws type="object">
          <type full="\SebastianBergmann\Money\OverflowException" namespace="\SebastianBergmann\Money" name="OverflowException"/>
        </throws>
      </docblock>
      <parameter name="other" byreference="false" type="object">
        <type full="SebastianBergmann\Money\Money" namespace="SebastianBergmann\Money" name="Money"/>
      </parameter>
    </method>
    <method name="negate" start="193" end="196" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns a new Money object that represents the negated monetary value of this Money object."/>
        <return resolution="static" type="object">
          <type full="SebastianBergmann\Money\KHR" namespace="SebastianBergmann\Money" name="KHR"/>
        </return>
      </docblock>
    </method>
    <method name="multiply" start="207" end="220" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns a new Money object that represents the monetary value of this Money object multiplied by a given factor."/>
        <param type="float" variable="$factor"/>
        <param type="integer" variable="$roundingMode"/>
        <return resolution="static" type="object">
          <type full="SebastianBergmann\Money\KHR" namespace="SebastianBergmann\Money" name="KHR"/>
        </return>
        <throws type="object">
          <type full="\SebastianBergmann\Money\InvalidArgumentException" namespace="\SebastianBergmann\Money" name="InvalidArgumentException"/>
        </throws>
      </docblock>
      <parameter name="factor" byreference="false" type="{unknown}"/>
      <parameter name="roundingMode" byreference="false" type="{unknown}" default="" constant="PHP_ROUND_HALF_UP"/>
    </method>
    <method name="allocateToTargets" start="230" end="250" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Allocate the monetary value represented by this Money object among N targets."/>
        <param type="integer" variable="$n"/>
        <return type="array" of="object">
          <type full="SebastianBergmann\Money\static" namespace="SebastianBergmann\Money" name="static"/>
        </return>
        <throws type="object">
          <type full="\SebastianBergmann\Money\InvalidArgumentException" namespace="\SebastianBergmann\Money" name="InvalidArgumentException"/>
        </throws>
      </docblock>
      <parameter name="n" byreference="false" type="{unknown}"/>
    </method>
    <method name="allocateByRatios" start="259" end="277" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Allocate the monetary value represented by this Money object using a list of ratios."/>
        <param type="array" variable="$ratios"/>
        <return type="array" of="object">
          <type full="SebastianBergmann\Money\static" namespace="SebastianBergmann\Money" name="static"/>
        </return>
      </docblock>
      <parameter name="ratios" byreference="false" type="array"/>
    </method>
    <method name="extractPercentage" start="295" end="307" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Extracts a percentage of the monetary value represented by this Money object and returns an array of two Money objects: $original = $result['subtotal'] + $result['percentage'];">Please note that this extracts the percentage out of a monetary value
where the percentage is already included. If you want to get the
percentage of the monetary value you should use multiplication
(multiply(0.21), for instance, to calculate 21% of a monetary value
represented by a Money object) instead.</description>
        <param type="float" variable="$percentage"/>
        <param type="integer" variable="$roundingMode"/>
        <return type="array" of="object">
          <type full="SebastianBergmann\Money\static" namespace="SebastianBergmann\Money" name="static"/>
        </return>
        <see value="https://github.com/sebastianbergmann/money/issues/27"/>
      </docblock>
      <parameter name="percentage" byreference="false" type="{unknown}"/>
      <parameter name="roundingMode" byreference="false" type="{unknown}" default="" constant="PHP_ROUND_HALF_UP"/>
    </method>
    <method name="compareTo" start="320" end="329" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Compares this Money object to another.">Returns an integer less than, equal to, or greater than zero
if the value of this Money object is considered to be respectively
less than, equal to, or greater than the other Money object.</description>
        <param type="object" variable="$other">
          <type full="\SebastianBergmann\Money\Money" namespace="\SebastianBergmann\Money" name="Money"/>
        </param>
        <return description="-1|0|1" type="integer"/>
        <throws type="object">
          <type full="\SebastianBergmann\Money\CurrencyMismatchException" namespace="\SebastianBergmann\Money" name="CurrencyMismatchException"/>
        </throws>
      </docblock>
      <parameter name="other" byreference="false" type="object">
        <type full="SebastianBergmann\Money\Money" namespace="SebastianBergmann\Money" name="Money"/>
      </parameter>
    </method>
    <method name="equals" start="338" end="341" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns TRUE if this Money object equals to another."/>
        <param type="object" variable="$other">
          <type full="\SebastianBergmann\Money\Money" namespace="\SebastianBergmann\Money" name="Money"/>
        </param>
        <return type="boolean"/>
        <throws type="object">
          <type full="\SebastianBergmann\Money\CurrencyMismatchException" namespace="\SebastianBergmann\Money" name="CurrencyMismatchException"/>
        </throws>
      </docblock>
      <parameter name="other" byreference="false" type="object">
        <type full="SebastianBergmann\Money\Money" namespace="SebastianBergmann\Money" name="Money"/>
      </parameter>
    </method>
    <method name="greaterThan" start="351" end="354" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns TRUE if the monetary value represented by this Money object is greater than that of another, FALSE otherwise."/>
        <param type="object" variable="$other">
          <type full="\SebastianBergmann\Money\Money" namespace="\SebastianBergmann\Money" name="Money"/>
        </param>
        <return type="boolean"/>
        <throws type="object">
          <type full="\SebastianBergmann\Money\CurrencyMismatchException" namespace="\SebastianBergmann\Money" name="CurrencyMismatchException"/>
        </throws>
      </docblock>
      <parameter name="other" byreference="false" type="object">
        <type full="SebastianBergmann\Money\Money" namespace="SebastianBergmann\Money" name="Money"/>
      </parameter>
    </method>
    <method name="greaterThanOrEqual" start="364" end="367" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns TRUE if the monetary value represented by this Money object is greater than or equal that of another, FALSE otherwise."/>
        <param type="object" variable="$other">
          <type full="\SebastianBergmann\Money\Money" namespace="\SebastianBergmann\Money" name="Money"/>
        </param>
        <return type="boolean"/>
        <throws type="object">
          <type full="\SebastianBergmann\Money\CurrencyMismatchException" namespace="\SebastianBergmann\Money" name="CurrencyMismatchException"/>
        </throws>
      </docblock>
      <parameter name="other" byreference="false" type="object">
        <type full="SebastianBergmann\Money\Money" namespace="SebastianBergmann\Money" name="Money"/>
      </parameter>
    </method>
    <method name="lessThan" start="377" end="380" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns TRUE if the monetary value represented by this Money object is smaller than that of another, FALSE otherwise."/>
        <param type="object" variable="$other">
          <type full="\SebastianBergmann\Money\Money" namespace="\SebastianBergmann\Money" name="Money"/>
        </param>
        <return type="boolean"/>
        <throws type="object">
          <type full="\SebastianBergmann\Money\CurrencyMismatchException" namespace="\SebastianBergmann\Money" name="CurrencyMismatchException"/>
        </throws>
      </docblock>
      <parameter name="other" byreference="false" type="object">
        <type full="SebastianBergmann\Money\Money" namespace="SebastianBergmann\Money" name="Money"/>
      </parameter>
    </method>
    <method name="lessThanOrEqual" start="390" end="393" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns TRUE if the monetary value represented by this Money object is smaller than or equal that of another, FALSE otherwise."/>
        <param type="object" variable="$other">
          <type full="\SebastianBergmann\Money\Money" namespace="\SebastianBergmann\Money" name="Money"/>
        </param>
        <return type="boolean"/>
        <throws type="object">
          <type full="\SebastianBergmann\Money\CurrencyMismatchException" namespace="\SebastianBergmann\Money" name="CurrencyMismatchException"/>
        </throws>
      </docblock>
      <parameter name="other" byreference="false" type="object">
        <type full="SebastianBergmann\Money\Money" namespace="SebastianBergmann\Money" name="Money"/>
      </parameter>
    </method>
  </parent>
  <interface full="JsonSerializable" namespace="" name="JsonSerializable">
    <method name="jsonSerialize" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Specify data which should be serialized to JSON"/>
      <return type="mixed"/>
    </docblock>
  </method>
  </interface>
</class>
